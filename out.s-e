.$0:
.globl main
main:
	pushq %rbp
	movq %rsp,%rbp
	subq $6,%rsp

.$1:
	leaq -4(%rbp),%rsi
	pushq %rsi

.$2:
	pushq 16(%rbp)
	call _readInteger
	addq $16,%rsp

.$3:
	movw -4(%rbp),%ax
	movw %ax,-2(%rbp)

.$4:
	movw -2(%rbp),%ax
	pushw %ax

.$5:
	subq $8,%rsp
	pushq 16(%rbp)
	call _writeInteger
	addq $18,%rsp

.$6:
	leaq -6(%rbp),%rsi
	pushq %rsi

.$7:
	pushq 16(%rbp)
	call _readInteger
	addq $16,%rsp

.$8:
	movw -6(%rbp),%ax
	movw %ax,-2(%rbp)

.$9:
	movw -2(%rbp),%ax
	pushw %ax

.$10:
	subq $8,%rsp
	pushq 16(%rbp)
	call _writeInteger
	addq $18,%rsp

.$11:
	movb $10,%al
	subq $1,%rsp
	movq %rsp,%rsi
	movb %al,(%rsi)

.$12:
	subq $8,%rsp
	pushq 16(%rbp)
	call _writeChar
	addq $17,%rsp

.$13:
	jmp .$main_0_11

.$14:
.$main_0_11:
	movq %rbp,%rsp
	popq %rbp
	ret

