.$0:
.globl main
main:
	pushq %rbp
	movq %rsp,%rbp
	subq $2,%rsp

.$1:
	leaq -2(%rbp),%rsi
	pushq %rsi

.$2:
	pushq 16(%rbp)
	call _readBoolean
	addq $16,%rsp

.$3:
	movb -2(%rbp),%al
	movb %al,-1(%rbp)

.$4:
	movb -1(%rbp),%al
	cmp $0,%al
	jne .$8

.$5:
	jmp .$6

.$6:
	leaq .LC.1(%rip),%rax
	pushq %rax

.$7:
	subq $8,%rsp
	pushq 16(%rbp)
	call _writeString
	addq $24,%rsp

.$8:
	jmp .$main_0_11

.$9:
.$main_0_11:
	movq %rbp,%rsp
	popq %rbp
	movq $0,%rax
	ret
.LC.1:
	.asciz	"false\n"

