.$0:
.globl main
main:
	pushq %rbp
	movq %rsp,%rbp
	subq $74,%rsp

.$1:
	movw $2,%ax
	movw $10,%cx
	imul %cx,%ax
	movw %ax,-26(%rbp)

.$2:
	movw -26(%rbp),%ax
	movq $0,%rdi
	movw %ax,%di
	call malloc
	movq %rax,-24(%rbp)

.$3:
	movq -24(%rbp),%rax
	movq %rax,-8(%rbp)

.$4:
	movw $0,%ax
	movq $0,%rcx
	movw $2,%cx
	imul %ax,%cx
	movq -8(%rbp),%rax
	addq %rcx,%rax
	movq %rax,-34(%rbp)

.$5:
	movw $100,%ax
	movq -34(%rbp),%rdi
	movw %ax,(%rdi)

.$6:
	movw $5,%ax
	movq $0,%rcx
	movw $2,%cx
	imul %ax,%cx
	movq -8(%rbp),%rax
	addq %rcx,%rax
	movq %rax,-42(%rbp)

.$7:
	movw $105,%ax
	movq -42(%rbp),%rdi
	movw %ax,(%rdi)

.$8:
	movw $9,%ax
	movq $0,%rcx
	movw $2,%cx
	imul %ax,%cx
	movq -8(%rbp),%rax
	addq %rcx,%rax
	movq %rax,-50(%rbp)

.$9:
	movw $109,%ax
	movq -50(%rbp),%rdi
	movw %ax,(%rdi)

.$10:
	movw $0,%ax
	movq $0,%rcx
	movw $2,%cx
	imul %ax,%cx
	movq -8(%rbp),%rax
	addq %rcx,%rax
	movq %rax,-58(%rbp)

.$11:
	movq -58(%rbp),%rdi
	movw (%rdi),%ax
	pushw %ax

.$12:
	subq $8,%rsp
	pushq 16(%rbp)
	call _writeInteger
	addq $18,%rsp

.$13:
	movb $10,%al
	subq $1,%rsp
	movq %rsp,%rsi
	movb %al,(%rsi)

.$14:
	subq $8,%rsp
	pushq 16(%rbp)
	call _writeChar
	addq $17,%rsp

.$15:
	movw $5,%ax
	movq $0,%rcx
	movw $2,%cx
	imul %ax,%cx
	movq -8(%rbp),%rax
	addq %rcx,%rax
	movq %rax,-66(%rbp)

.$16:
	movq -66(%rbp),%rdi
	movw (%rdi),%ax
	pushw %ax

.$17:
	subq $8,%rsp
	pushq 16(%rbp)
	call _writeInteger
	addq $18,%rsp

.$18:
	movb $10,%al
	subq $1,%rsp
	movq %rsp,%rsi
	movb %al,(%rsi)

.$19:
	subq $8,%rsp
	pushq 16(%rbp)
	call _writeChar
	addq $17,%rsp

.$20:
	movw $9,%ax
	movq $0,%rcx
	movw $2,%cx
	imul %ax,%cx
	movq -8(%rbp),%rax
	addq %rcx,%rax
	movq %rax,-74(%rbp)

.$21:
	movq -74(%rbp),%rdi
	movw (%rdi),%ax
	pushw %ax

.$22:
	subq $8,%rsp
	pushq 16(%rbp)
	call _writeInteger
	addq $18,%rsp

.$23:
	movb $10,%al
	subq $1,%rsp
	movq %rsp,%rsi
	movb %al,(%rsi)

.$24:
	subq $8,%rsp
	pushq 16(%rbp)
	call _writeChar
	addq $17,%rsp

.$25:
.$main_0_11:
	movq %rbp,%rsp
	popq %rbp
	movq $0,%rax
	ret

